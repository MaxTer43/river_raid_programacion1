#include "conio.h"
#include "iostream"
#include "windows.h"

#define FILAS 30
#define COLUMNAS 51

using namespace System;
using namespace std;

int mapa_juego[FILAS][COLUMNAS];

//intro
void intro()
{
	int mapa[FILAS][COLUMNAS] = {
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 0, 4, 0, 4, 0, 4, 4, 4, 0, 4, 4, 4 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 0, 0, 4, 0, 4 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4, 4, 4, 0, 4, 4, 4 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 4, 0, 0, 4, 0, 4, 0, 4, 0, 0, 0, 4, 4, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 4, 4, 4, 0, 0, 4, 0, 0, 4, 4, 4, 0, 4, 0, 4 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 0, 4, 4, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 4, 0, 4, 0, 0, 4, 0, 0, 4, 0, 4, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 4, 0, 4, 0, 4, 0, 4, 4, 4, 0, 4, 4, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 19, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
		{ 0, 0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
	};

	for (int f = 0; f < 24; f++)
	{
		for (int c = 0; c < 70; c++)
		{
			if (mapa[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)219; }
			if (mapa[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Cyan; cout << (char)219; }
			if (mapa[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Green; cout << (char)219; }
			if (mapa[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)5; }
			if (mapa[f][c] == 1) { Console::ForegroundColor = ConsoleColor::Blue; cout << "*"; }
			if (mapa[f][c] == 5) { Console::ForegroundColor = ConsoleColor::White; cout << "Combustible: "; }
			if (mapa[f][c] == 6) { Console::ForegroundColor = ConsoleColor::White; cout << (char)57; }
			if (mapa[f][c] == 7) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)57; }
			if (mapa[f][c] == 8) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)17; }
			if (mapa[f][c] == 9) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)16; }
			if (mapa[f][c] == 10) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)219; }
			if (mapa[f][c] == 11) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)223; }
			if (mapa[f][c] == 21) { Console::ForegroundColor = ConsoleColor::Blue; cout << (char)184; }
			if (mapa[f][c] == 12) { Console::ForegroundColor = ConsoleColor::White; cout << "= Vida adicional"; }
			if (mapa[f][c] == 14) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa[f][c] == 15) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa[f][c] == 16) { Console::ForegroundColor = ConsoleColor::White; cout << " = Puntaje"; }
			if (mapa[f][c] == 17) { Console::ForegroundColor = ConsoleColor::White; cout << " = Enemigo"; }
			if (mapa[f][c] == 18) { Console::ForegroundColor = ConsoleColor::White; cout << " = Obstaculo"; }
			if (mapa[f][c] == 19) { Console::ForegroundColor = ConsoleColor::White; cout << " = Tu avion"; }
			if (mapa[f][c] == 20) { Console::ForegroundColor = ConsoleColor::White; cout << "Presiona cualquier tecla para continuar."; }
		}
		cout << endl;
	}
}

//NIVEL 1
void mapa1()
{


	int mapa1[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },

	};


	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa1[f][c];
			if (mapa1[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa1[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa1[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa1[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa1[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa1[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }

		}
		cout << "\n";
	}
}


//NIVEL 2
void mapa2()
{
	int mapa2[FILAS][COLUMNAS] = {


		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },


	};


	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa2[f][c];
			if (mapa2[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa2[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa2[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa2[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa2[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa2[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
		}
		cout << "\n";
	}

}

//NIVEL 3
void mapa3()
{
	int mapa3[FILAS][COLUMNAS] = {


		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },

	};



	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa3[f][c];
			if (mapa3[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa3[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa3[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa3[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa3[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa3[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
		}
		cout << "\n";
	}


}

//NIVEL 4
void mapa4()
{
	int mapa4[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 2, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 2, 0, 2, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 0, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 9, 9, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 9, 9, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },

	};


	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa4[f][c];
			if (mapa4[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa4[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa4[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa4[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa4[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa4[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
			if (mapa4[f][c] == 5) { Console::ForegroundColor = ConsoleColor::Blue; cout << (char)184; }
		}
		cout << "\n";
	}
}

//NIVEL 5
void mapa5()
{
	int mapa5[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 2, 0, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 9, 9, 9, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1 },


	};


	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa5[f][c];
			if (mapa5[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa5[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa5[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa5[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa5[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa5[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
		}
		cout << "\n";
	}


}

//NIVEL 6
void mapa6()
{
	int mapa6[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 9, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 9, 9, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 9, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 9, 9, 1, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },


	};

	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa6[f][c];
			if (mapa6[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa6[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa6[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa6[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa6[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa6[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
		}
		cout << "\n";
	}


}

//NIVEL 7
void mapa7()
{
	int mapa7[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 9, 9, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 9, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },


	};

	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa7[f][c];
			if (mapa7[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa7[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa7[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa7[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa7[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa7[f][c] == 9) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
			if (mapa7[f][c] == 5) { Console::ForegroundColor = ConsoleColor::Blue; cout << (char)184; }

		}
		cout << "\n";
	}


}

//NIVEL 8
void mapa8()
{
	int mapa8[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 1, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 8, 8, 8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },


	};

	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = mapa8[f][c];
			if (mapa8[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (mapa8[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (mapa8[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (mapa8[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (mapa8[f][c] == 4) { Console::ForegroundColor = ConsoleColor::Gray; cout << (char)207; }
			if (mapa8[f][c] == 8) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
		}
		cout << "\n";
	}


}

//JEFE
void boss()
{
	int boss[FILAS][COLUMNAS] = {

		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 4, 4, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },
		{ 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 },


	};

	for (int f = 0; f < FILAS; f++)
	{
		for (int c = 0; c < COLUMNAS; c++)
		{
			mapa_juego[f][c] = boss[f][c];
			if (boss[f][c] == 0) { Console::ForegroundColor = ConsoleColor::Black; cout << (char)176; }
			if (boss[f][c] == 1) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
			if (boss[f][c] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
			if (boss[f][c] == 3) { Console::ForegroundColor = ConsoleColor::Red; cout << (char)207; }
			if (boss[f][c] == 4) { Console::ForegroundColor = ConsoleColor::DarkGray; cout << (char)219; }
			if (boss[f][c] == 9) { Console::ForegroundColor = ConsoleColor::Green; cout << (char)219; }
			if (boss[f][c] == 8) { Console::ForegroundColor = ConsoleColor::DarkGreen; cout << (char)219; }
		}
		cout << "\n";
	}


}

//JUEGO TERMINADO
void game_over()
{
	cout << "   _ _ _   _   _    _       _ _      _ _ _   _\n";
	cout << "  |  _ _| | | |  - | |     |    -   |  _ _| | |\n";
	cout << "  | |_    | | |   -| |     |  _  -  | |_    | |\n";
	cout << "  |  _|   | | | |- | |     | |_-  | |  _|   | | \n";
	cout << "  | |     | | | | -  |     |     -  | |_ _  | |_\n";
	cout << "  |_|     |_| |_|  -_|     |_ _ -   |_ _ _| |_ _|\n";
	cout << "\n";
	cout << "   _ _ _ _ _   _     _   _ _ _   _ _ _ _   _ _ _\n";
	cout << "  |_ _   _ _| | |   | | |  _ _| |  _ _ _| |  _  |\n";
	cout << "      | |     | |   | | | |_    | |  _ _  | | | |\n";
	cout << "      | |     | |   | | |  _|   | | |_  | | | | |\n";
	cout << "    _/  |     | |_ _| | | |_ _  | |_ _| | | |_| |\n";
	cout << "   |_ _/      |_ _ _ _| |_ _ _| |_ _ _ _| |_ _ _|\n";
}


void main()
{


	int nivel = 1;
	int contador = 0;
	int vidas = 4;
	Random r;
	int vidas_jefe = 10;

	Console::SetWindowSize(51, 44);

	//enemigos nivel 1
	int x1 = 19, y1 = 5, d1 = 1; int xb1, yb1 = y1, db1 = 1; xb1 = r.Next(15, 39); int activa_bala1 = 0;
	int x2 = 26, y2 = 18, d2 = 1;
	int x3 = 26, y3 = 14, d3 = 1;
	//enemigos nivel 2
	int x4 = 15, y4 = 18, d4 = 1;
	int x5 = 37, y5 = 18, d5 = 1;
	int x6 = 26, y6 = 11, d6 = 1;
	int x7 = 22, y7 = 5, d7 = 1; int xb2, yb2 = y7, db2 = 1; xb2 = r.Next(16, 24); int activa_bala2 = 0;
	int x8 = 30, y8 = 5, d8 = 1; int xb3, yb3 = y8, db3 = 1; xb3 = r.Next(26, 39); int activa_bala3 = 0;
	//enemigos nivel 3
	int x9 = 17, y9 = 2, d9 = 1;
	int x10 = 33, y10 = 2, d10 = 1;
	int x11 = 12, y11 = 8, d11 = 1; int xb11, yb11 = y11, db11 = 1; xb11 = r.Next(9, 22); int activa_bala11 = 0;
	int x12 = 38, y12 = 8, d12 = 1; int xb12, yb12 = y12, db12 = 1; xb12 = r.Next(29, 43); int activa_bala12 = 0;
	int x13 = 11, y13 = 18, d13 = 1;
	int x14 = 39, y14 = 18, d14 = 1;
	//enemigos nivel 4
	int x15 = 25, y15 = 4, d15 = 1; int xb15, yb15 = y15, db15 = 1; xb15 = r.Next(12, 38); int activa_bala15 = 0;
	int x16 = 25, y16 = 12, d16 = 1;
	int x17 = 13, y17 = 16, d17 = 1;
	int x18 = 37, y18 = 16, d18 = 1;
	int x19 = 25, y19 = 17, d19 = 1;
	//enemigos nivel 5
	int x20 = 19, y20 = 4, d20 = 1;
	int x21 = 33, y21 = 4, d21 = 1;
	int x24 = 26, y24 = 10, d24 = 1; int xb24, yb24 = y24, db24 = 1; xb24 = r.Next(8, 42); int activa_bala24 = 0;
	int x27 = 19, y27 = 18, d27 = 1; int xb27, yb27 = y27, db27 = 1; xb27 = r.Next(33, 41); int activa_bala27 = 0;
	int x28 = 33, y28 = 18, d28 = 1; int xb28, yb28 = y28, db28 = 1; xb28 = r.Next(33, 41); int activa_bala28 = 0;
	int x29 = 26, y29 = 3, d29 = 1;
	//enemigos nivel 6
	int x58 = 20, y58 = 1, d58 = 1;
	int x60 = 25, y60 = 2, d60 = 1;
	int x61 = 30, y61 = 14, d61 = 1; int xb61, yb61 = y61, db61 = 1; xb61 = r.Next(23, 33); int activa_bala61 = 0;
	int x62 = 25, y62 = 13, d62 = 1;
	int x63 = 20, y63 = 19, d63 = 1;
	int x64 = 20, y64 = 20, d64 = 1;

	// enemigos nivel 7
	int x65 = 18, y65 = 1, d65 = 1; int xb65, yb65 = y65, db65 = 1; xb65 = r.Next(19, 33); int activa_bala65 = 0;
	int x66 = 29, y66 = 2, d66 = 1;
	int x67 = 26, y67 = 3, d67 = 1;
	int x68 = 22, y68 = 4, d68 = 1;
	int x69 = 24, y69 = 5, d69 = 1;
	int x70 = 19, y70 = 6, d70 = 1;
	int x71 = 22, y71 = 10, d71 = 1;
	int x72 = 28, y72 = 11, d72 = 1;
	int x73 = 24, y73 = 12, d73 = 1;
	int x75 = 22, y75 = 17, d75 = 1;
	int x76 = 21, y76 = 18, d76 = 1;
	int x77 = 21, y77 = 19, d77 = 1;
	int x78 = 20, y78 = 22, d78 = 1;

	//enemigos nivel 8
	int x91 = 20, y91 = 6, d91 = 1;
	int x92 = 21, y92 = 9, d92 = 1; int xb92, yb92 = y92, db92 = 1; xb92 = r.Next(26, 31); int activa_bala92 = 0;
	int x93 = 22, y93 = 11, d93 = 1;
	int x94 = 23, y94 = 12, d94 = 1;

	int x95 = 21, y95 = 14, d95 = 1;
	int x96 = 27, y96 = 18, d96 = 1;
	int x97 = 24, y97 = 21, d97 = 1;
	int x98 = 26, y98 = 23, d98 = 1;
	int x99 = 20, y99 = 24, d99 = 1;
	int x100 = 26, y100 = 26, d100 = 1;
	//Jefe
	int x30 = 23, y30 = 6, d30 = 1;
	int x31 = 24, y31 = 6, d31 = 1;
	int x32 = 25, y32 = 6, d32 = 1;
	int x33 = 26, y33 = 6, d33 = 1;
	int x34 = 27, y34 = 6, d34 = 1;
	int x35 = 28, y35 = 6, d35 = 1;
	int x36 = 29, y36 = 6, d36 = 1;

	int x37 = 23, y37 = 7, d37 = 1;
	int x38 = 24, y38 = 7, d38 = 1;
	int x39 = 25, y39 = 7, d39 = 1;
	int x40 = 26, y40 = 7, d40 = 1;
	int x41 = 27, y41 = 7, d41 = 1;
	int x42 = 28, y42 = 7, d42 = 1;
	int x43 = 29, y43 = 7, d43 = 1;

	int x44 = 23, y44 = 8, d44 = 1;
	int x45 = 24, y45 = 8, d45 = 1;
	int x46 = 25, y46 = 8, d46 = 1;
	int x47 = 26, y47 = 8, d47 = 1;
	int x48 = 27, y48 = 8, d48 = 1;
	int x49 = 28, y49 = 8, d49 = 1;
	int x50 = 29, y50 = 8, d50 = 1;

	int x51 = 23, y51 = 9, d51 = 1; int xb51, yb51 = y51, db51 = 1; xb51 = r.Next(16, 31); int activa_bala51 = 0;
	int x52 = 24, y52 = 9, d52 = 1; int xb52, yb52 = y52, db52 = 1; xb52 = r.Next(16, 31); int activa_bala52 = 0;
	int x53 = 25, y53 = 9, d53 = 1; int xb53, yb53 = y53, db53 = 1; xb53 = r.Next(16, 31); int activa_bala53 = 0;
	int x54 = 26, y54 = 9, d54 = 1; int xb54, yb54 = y54, db54 = 1; xb54 = r.Next(16, 31); int activa_bala54 = 0;
	int x55 = 27, y55 = 9, d55 = 1; int xb55, yb55 = y55, db55 = 1; xb55 = r.Next(16, 31); int activa_bala55 = 0;
	int x56 = 28, y56 = 9, d56 = 1; int xb56, yb56 = y56, db56 = 1; xb56 = r.Next(16, 31); int activa_bala56 = 0;
	int x57 = 29, y57 = 9, d57 = 1; int xb57, yb57 = y57, db57 = 1; xb57 = r.Next(16, 31); int activa_bala57 = 0;
	int tiempo = 100000;


	intro();
	_getch();
	Console::Clear();
	mapa1();



	char tecla;
	int puntaje = 0;
	int enemigos = 0;
	int puntaje_nivel;
	int puntaje_requerido;
	int puntaje1, puntaje2, puntaje3, puntaje4, puntaje5, puntaje6, puntaje7, puntaje8;

	int x = 25, y = 29;
	Console::SetCursorPosition(x, y);
	Console::ForegroundColor = ConsoleColor::Blue; cout << "*";

	//Para la mina
	int xba = x, yba = y, dba = 1;
	xba = tecla;
	int activa_mina = 1;
	Console::SetCursorPosition(x, y);
	Console::ForegroundColor = ConsoleColor::Blue;
	cout << "*";

	while (1)
	{
		Console::CursorVisible = false;
		
		Console::CursorVisible = false;

		Console::SetCursorPosition(1, 34); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::White; cout << "Total enemigos eliminados: " << enemigos;
		if (nivel < 9)
		{
			Console::SetCursorPosition(1, 36); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Red; cout << "Enemigos eliminados en este mapa: ";
		}

		if (nivel == 9)
		{
			Console::SetCursorPosition(1, 36); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::White; cout << "Derrota al jefe!!!";
		}
		
		if (vidas == 6)
		{
			Console::SetCursorPosition(1, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Blue; cout << "Vidas: ";
			cout << "* * * * *";
		}
		if (vidas == 5)
		{
			Console::SetCursorPosition(1, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Blue; cout << "Vidas: ";
			cout << "* * * *";
		}

		if (vidas == 4)
		{
			Console::SetCursorPosition(1, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Blue; cout << "Vidas: ";
			cout << "* * *    ";
		}

		if (vidas == 3)
		{
			Console::SetCursorPosition(1, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Blue; cout << "Vidas: ";
			cout << "* *        ";
		}

		if (vidas == 2)
		{
			Console::SetCursorPosition(1, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Blue; cout << "Vidas: ";
			cout << "*         ";
		}

		if (vidas == 1)
		{
			Console::SetCursorPosition(1, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Blue; cout << "Vidas: ";
			cout << "         ";
		}

		if (vidas == 0)
		{
			char tecla;

			Console::Clear();
			Console::SetCursorPosition(0, 10);
			Console::ForegroundColor = ConsoleColor::Blue;
			game_over();
			Console::SetCursorPosition(1, 33);
			Console::ForegroundColor = ConsoleColor::White;
			cout << "Presione la tecla f para finalizar ...";
			tecla = _getch();
			if (tecla == 'f' || tecla == 'F') { break; }

		}


		Console::SetCursorPosition(31, 32); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Yellow; cout << "Puntaje total: " << puntaje;


		if (nivel == 1)
		{
			puntaje_nivel = 500;
			puntaje_requerido = puntaje_nivel - puntaje;
			puntaje1 = puntaje;
		}

		if (nivel == 2)
		{
			puntaje_nivel = 400;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje1);
			puntaje2 = puntaje;
		}

		if (nivel == 3)
		{
			puntaje_nivel = 400;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje2);
			puntaje3 = puntaje;
		}

		if (nivel == 4)
		{
			puntaje_nivel = 600;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje3);
			puntaje4 = puntaje;
		}

		if (nivel == 5)
		{
			puntaje_nivel = 600;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje4);
			puntaje5 = puntaje;
		}

		if (nivel == 6)
		{
			puntaje_nivel = 400;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje5);
			puntaje6 = puntaje;
		}

		if (nivel == 7)
		{
			puntaje_nivel = 300;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje6);
			puntaje7 = puntaje;
		}

		if (nivel == 8)
		{
			puntaje_nivel = 300;
			puntaje_requerido = puntaje_nivel - (puntaje - puntaje7);
			puntaje8 = puntaje;
		}

		if (puntaje_requerido <1)
		{
			Console::SetCursorPosition(1, 33); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Green; cout << "Puntos necesarios: -----";
		}
		else { Console::SetCursorPosition(1, 33); Console::BackgroundColor = ConsoleColor::Black; Console::ForegroundColor = ConsoleColor::Green; cout << "Puntos necesarios: " << puntaje_requerido; }


		//movimiento del personaje
		if (_kbhit())
		{
			tecla = _getch();

			if (mapa_juego[y][x] == 9)
			{
				Console::SetCursorPosition(x, y);  Console::ForegroundColor = ConsoleColor::DarkGray; Console::BackgroundColor = ConsoleColor::DarkGray;
			}
			else
				Console::SetCursorPosition(x, y); cout << " ";

			if (tecla == 77 && mapa_juego[y][x + 1] != 1) { x++; }
			if (tecla == 75 && mapa_juego[y][x - 1] != 1) { x--; }
			if (tecla == 72 && mapa_juego[y - 1][x] != 1 && y>0) { y--; }
			if (tecla == 80 && mapa_juego[y + 1][x] != 1 && y<29) { y++; }

			if (mapa_juego[y][x] == 9)
			{
				Console::SetCursorPosition(x, y); Console::ForegroundColor = ConsoleColor::Blue;  Console::BackgroundColor = ConsoleColor::DarkGray;  cout << "*";
			}
			else
			{
				Console::SetCursorPosition(x, y); Console::ForegroundColor = ConsoleColor::Blue;  Console::BackgroundColor = ConsoleColor::Black; cout << "*";
			}

			//borrar
			Console::SetCursorPosition(x, y); cout << " ";

			//mina
			if (tecla == 'x' && mapa_juego[y - 1][x] != 1 || tecla == 'X' && mapa_juego[y - 1][x] != 1)
			{
				if (xba == x)
				{
					activa_mina = 1;
				}

				if (activa_mina)
				{
					yba = y;
					xba = x;


					//borrar
					Console::SetCursorPosition(xba, yba); cout << " ";
					//mover
					if (yba == y)
					{
						dba = dba* +1;
						yba -= dba;
					}
					if (yba == 0)
					{
						dba = dba* +1;
						yba -= dba;
					}
					//imprimir
					Console::SetCursorPosition(xba, yba); Console::ForegroundColor = ConsoleColor::Yellow;
					cout << "*";

					if (yba <= 0) {
						Console::SetCursorPosition(xba, yba); cout << " ";
						activa_mina = 0;
						yba = y;
						xba = x;
					}
				}

				//imprimir
				Console::SetCursorPosition(x, y); Console::ForegroundColor = ConsoleColor::Blue;
				cout << "*";
			}
				if (mapa_juego[y][x] == 9)
				{
					Console::SetCursorPosition(x, y); Console::ForegroundColor = ConsoleColor::Blue;  Console::BackgroundColor = ConsoleColor::DarkGray;  cout << "*";
				}
				else
				{
					Console::SetCursorPosition(x, y); Console::ForegroundColor = ConsoleColor::Blue;  Console::BackgroundColor = ConsoleColor::Black; cout << "*";
				}

				
			}


		//puntaje
		if (mapa_juego[y][x] == 2)
		{
			puntaje += 100;
			mapa_juego[y][x] = 0;

		}
		//vida adicional
		if (mapa_juego[y][x] == 5)
		{
			vidas++;
			mapa_juego[y][x] = 0;

		}



		//enemigos nivel 1

		if (nivel == 1)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x1, y1); cout << " ";
				if (x1 == 40) d1 = d1*-1;
				if (x1 == 12) d1 = d1*-1;
				Console::SetCursorPosition(x2, y2); cout << " ";
				if (x2 == 38) d2 = d2*-1;
				if (x2 == 11) d2 = d2*-1;
				Console::SetCursorPosition(x3, y3); cout << " ";
				if (x3 == 41) d3 = d3*-1;
				if (x3 == 13) d3 = d3*-1;
				x1 += d1;
				x2 += d2;
				x3 += d3;

				//bala
				if (xb1 == x1)
				{
					activa_bala1 = 1;
				}

				if (activa_bala1)
				{
					Console::SetCursorPosition(xb1, yb1);

					if (mapa_juego[yb1][xb1] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb1][xb1] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb1 < 29) yb1++;
					Console::SetCursorPosition(xb1, yb1); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb1 == 29 || mapa_juego[yb1][xb1] == 1) {
						Console::SetCursorPosition(xb1, yb1); cout << " ";
						activa_bala1 = 0;
						yb1 = y1;
						xb1 = r.Next(15, 39);
					}
				}

				//fin bala

				//Mina
				if (x1 == xba && y1 == yba)
				{
					enemigos++;
					d1 = NULL;
					x1 = 3;
					y1 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x1, y1);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x1, y1); cout << (char)207;
				}
				//Fin de choque con mina

				if (x2 == xba && y2 == yba)
				{
					enemigos++;
					d2 = NULL;
					x2 = 1;
					y2 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x2, y2);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x2, y2); cout << (char)207;
				}

				if (x3 == xba && y3 == yba)
				{
					enemigos++;
					d3 = NULL;
					x3 = 2;
					y3 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x3, y3);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x3, y3); cout << (char)207;
				}

				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x1, y1); cout << (char)207;
				Console::SetCursorPosition(x2, y2); cout << (char)207;
				Console::SetCursorPosition(x3, y3); cout << (char)207;

				//perdida de vidas nivel 1
				if (x == x1 && y == y1 || x == x2 && y == y2 || x == x3 && y == y3 || x == xb1 && y == yb1)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}

			}
			tiempo++;
		}


		//pasar a nivel 2
		if (y == 0 && nivel == 1 && puntaje_requerido<1)
		{
			nivel = 2;

		}
		if (nivel == 2 && contador == 0)
		{
			Console::Clear();
			mapa2();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 1;
		}

		//enemigos nivel 2

		if (nivel == 2)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x4, y4); cout << " ";
				if (x4 == 21) d4 = d4*-1;
				if (x4 == 7) d4 = d4*-1;
				Console::SetCursorPosition(x5, y5); cout << " ";
				if (x5 == 29) d5 = d5*-1;
				if (x5 == 43) d5 = d5*-1;
				Console::SetCursorPosition(x6, y6); cout << " ";
				if (x6 == 40) d6 = d6*-1;
				if (x6 == 10) d6 = d6*-1;
				Console::SetCursorPosition(x7, y7); cout << " ";
				if (x7 == 15) d7 = d7*-1;
				if (x7 == 25) d7 = d7*-1;
				Console::SetCursorPosition(x8, y8); cout << " ";
				if (x8 == 25) d8 = d8*-1;
				if (x8 == 37) d8 = d8*-1;
				x4 += d4;
				x5 += d5;
				x6 += d6;
				x7 += d7;
				x8 += d8;

				//bala2
				if (xb2 == x7)
				{
					activa_bala2 = 1;
				}

				if (activa_bala2)
				{
					Console::SetCursorPosition(xb2, yb2);

					if (mapa_juego[yb2][xb2] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb2][xb2] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb2 < 29) yb2++;
					Console::SetCursorPosition(xb2, yb2); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb2 == 29 || mapa_juego[yb2 + 1][xb2] == 1) {
						Console::SetCursorPosition(xb2, yb2); cout << " ";
						activa_bala2 = 0;
						yb2 = y7;
						xb2 = r.Next(16, 24);
					}
				}
				//fin bala2

				//bala3
				if (xb3 == x8)
				{
					activa_bala3 = 1;
				}

				if (activa_bala3)
				{
					Console::SetCursorPosition(xb3, yb3);

					if (mapa_juego[yb3][xb3] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb3][xb3] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb3 < 29) yb3++;
					Console::SetCursorPosition(xb3, yb3); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb3 == 29 || mapa_juego[yb3 + 1][xb3] == 1) {
						Console::SetCursorPosition(xb3, yb3); cout << " ";
						activa_bala3 = 0;
						yb3 = y8;
						xb3 = r.Next(26, 39);
					}
				}

				//fin bala3

				if (x4 == xba && y4 == yba)
				{
					enemigos++;
					d4 = NULL;
					x4 = 5;
					y4 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x4, y4);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x4, y4); cout << (char)207;
				}

				if (x5 == xba && y5 == yba)
				{
					enemigos++;
					d5 = NULL;
					x5 = 4;
					y5 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x5, y5);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x5, y5); cout << (char)207;
				}

				if (x6 == xba && y6 == yba)
				{
					enemigos++;
					d6 = NULL;
					x6 = 3;
					y6 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x6, y6);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x6, y6); cout << (char)207;
				}

				if (x7 == xba && y7 == yba)
				{
					enemigos++;
					d7 = NULL;
					x7 = 2;
					y7 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x7, y7);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x7, y7); cout << (char)207;
				}

				if (x8 == xba && y8 == yba)
				{
					enemigos++;
					d8 = NULL;
					x8 = 1;
					y8 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x8, y8);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x8, y8); cout << (char)207;
				}


				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x4, y4); cout << (char)207;
				Console::SetCursorPosition(x5, y5); cout << (char)207;
				Console::SetCursorPosition(x6, y6); cout << (char)207;
				Console::SetCursorPosition(x7, y7); cout << (char)207;
				Console::SetCursorPosition(x8, y8); cout << (char)207;

				//perdida de vidas nivel 2
				if (x == x4 && y == y4 || x == x5 && y == y5 ||
					x == x6 && y == y6 || x == x7 && y == y7 ||
					x == x8 && y == y8 || x == xb2 && y == yb2 ||
					x == xb3 && y == yb3)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}


			}
			tiempo++;
		}


		//pasar a nivel 3
		if (y == 0 && nivel == 2 && puntaje_requerido<1)
		{
			nivel = 3;
		}


		if (nivel == 3 && contador == 1)
		{
			Console::Clear();
			mapa3();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 2;
		}


		//enemigos nivel 3

		if (nivel == 3)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x9, y9); cout << " ";
				if (x9 == 22) d9 = d9*-1;
				if (x9 == 14) d9 = d9*-1;
				Console::SetCursorPosition(x10, y10); cout << " ";
				if (x10 == 36) d10 = d10*-1;
				if (x10 == 28) d10 = d10*-1;
				Console::SetCursorPosition(x11, y11); cout << " ";
				if (x11 == 23) d11 = d11*-1;
				if (x11 == 8) d11 = d11*-1;
				Console::SetCursorPosition(x12, y12); cout << " ";
				if (x12 == 43) d12 = d12*-1;
				if (x12 == 27) d12 = d12*-1;
				Console::SetCursorPosition(x13, y13); cout << " ";
				if (x13 == 25) d13 = d13*-1;
				if (x13 == 8) d13 = d13*-1;
				Console::SetCursorPosition(x14, y14); cout << " ";
				if (x14 == 40) d14 = d14*-1;
				if (x14 == 25) d14 = d14*-1;


				x9 += d9;
				x10 += d10;
				x11 += d11;
				x12 += d12;
				x13 += d13;
				x14 += d14;

				//bala11
				if (xb11 == x11)
				{
					activa_bala11 = 1;
				}

				if (activa_bala11)
				{
					Console::SetCursorPosition(xb11, yb11);

					if (mapa_juego[yb11][xb11] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb11][xb11] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb11 < 29) yb11++;
					Console::SetCursorPosition(xb11, yb11); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb11 == 29 || mapa_juego[yb11 + 1][xb11] == 1) {
						Console::SetCursorPosition(xb11, yb11); cout << " ";
						activa_bala11 = 0;
						yb11 = y11;
						xb11 = r.Next(9, 22);
					}
				}
				//fin bala11

				//bala12
				if (xb12 == x12)
				{
					activa_bala12 = 1;
				}

				if (activa_bala12)
				{
					Console::SetCursorPosition(xb12, yb12);

					if (mapa_juego[yb12][xb12] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb12][xb12] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb12 < 29) yb12++;
					Console::SetCursorPosition(xb12, yb12); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb12 == 29 || mapa_juego[yb12 + 1][xb12] == 1) {
						Console::SetCursorPosition(xb12, yb12); cout << " ";
						activa_bala12 = 0;
						yb12 = y12;
						xb12 = r.Next(29, 43);
					}
				}

				//fin bala12

				if (x9 == xba && y9 == yba)
				{
					enemigos++;
					d9 = NULL;
					x9 = 1;
					y9 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x9, y9);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x9, y9); cout << (char)207;
				}

				if (x10 == xba && y10 == yba)
				{
					enemigos++;
					d10 = NULL;
					x10 = 2;
					y10 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x10, y10);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x10, y10); cout << (char)207;
				}

				if (x11 == xba && y11 == yba)
				{
					enemigos++;
					d11 = NULL;
					x11 = 3;
					y11 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x11, y11);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x11, y11); cout << (char)207;
				}

				if (x12 == xba && y12 == yba)
				{
					enemigos++;
					d12 = NULL;
					x12 = 4;
					y12 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x12, y12);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x12, y12); cout << (char)207;
				}

				if (x13 == xba && y13 == yba)
				{
					enemigos++;
					d13 = NULL;
					x13 = 5;
					y13 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x13, y13);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x13, y13); cout << (char)207;
				}

				if (x14 == xba && y14 == yba)
				{
					enemigos++;
					d14 = NULL;
					x14 = 6;
					y14 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x14, y14);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x14, y14); cout << (char)207;
				}

				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x9, y9); cout << (char)207;
				Console::SetCursorPosition(x10, y10); cout << (char)207;
				Console::SetCursorPosition(x11, y11); cout << (char)207;
				Console::SetCursorPosition(x12, y12); cout << (char)207;
				Console::SetCursorPosition(x13, y13); cout << (char)207;
				Console::SetCursorPosition(x14, y14); cout << (char)207;

				//perdida de vidas nivel 3
				if (x == x9 && y == y9 || x == x10 && y == y10 ||
					x == x11 && y == y11 || x == x12 && y == y12 ||
					x == x13 && y == y13 || x == x14 && y == y14 ||
					x == xb11 && y == yb11 || x == xb12 && y == yb12)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}
			}
			tiempo++;
		}



		//pasar a nivel 4
		if (y == 0 && nivel == 3 && puntaje_requerido<1)
		{
			nivel = 4;
		}

		if (nivel == 4 && contador == 2)
		{
			Console::Clear();
			mapa4();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 3;
		}

		//enemigos nivel 4
		if (nivel == 4)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x15, y15); cout << " ";
				if (x15 == 38) d15 = d15*-1;
				if (x15 == 12) d15 = d15*-1;
				Console::SetCursorPosition(x16, y16); cout << " ";
				if (x16 == 35) d16 = d16*-1;
				if (x16 == 15) d16 = d16*-1;
				Console::SetCursorPosition(x17, y17); cout << " ";
				if (x17 == 17) d17 = d17*-1;
				if (x17 == 8) d17 = d17*-1;
				Console::SetCursorPosition(x18, y18); cout << " ";
				if (x18 == 42) d18 = d18*-1;
				if (x18 == 33) d18 = d18*-1;
				Console::SetCursorPosition(x19, y19); cout << " ";
				if (x19 == 27) d19 = d19*-1;
				if (x19 == 23) d19 = d19*-1;

				x15 += d15;
				x16 += d16;
				x17 += d17;
				x18 += d18;
				x19 += d19;

				//bala15
				if (xb15 == x15)
				{
					activa_bala15 = 1;
				}

				if (activa_bala15)
				{
					Console::SetCursorPosition(xb15, yb15);

					if (mapa_juego[yb15][xb15] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb15][xb15] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb15 < 29) yb15++;
					Console::SetCursorPosition(xb15, yb15); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb15 == 29 || mapa_juego[yb15 + 1][xb15] == 1) {
						Console::SetCursorPosition(xb15, yb15); cout << " ";
						activa_bala15 = 0;
						yb15 = y15;
						xb15 = r.Next(12, 38);
					}
				}

				//fin bala17

				if (x15 == xba && y15 == yba)
				{
					enemigos++;
					d15 = NULL;
					x15 = 1;
					y15 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x15, y15);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x15, y15); cout << (char)207;
				}

				if (x15 == xba && y15 == yba)
				{
					enemigos++;
					d15 = NULL;
					x15 = 1;
					y15 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x15, y15);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x15, y15); cout << (char)207;
				}

				if (x16 == xba && y16 == yba)
				{
					enemigos++;
					d16 = NULL;
					x16 = 2;
					y16 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x16, y16);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x16, y16); cout << (char)207;
				}

				if (x17 == xba && y17 == yba)
				{
					enemigos++;
					d17 = NULL;
					x17 = 3;
					y17 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x17, y17);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x17, y17); cout << (char)207;
				}

				if (x18 == xba && y18 == yba)
				{
					enemigos++;
					d18 = NULL;
					x18 = 4;
					y18 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x18, y18);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x18, y18); cout << (char)207;
				}

				if (x19 == xba && y19 == yba)
				{
					enemigos++;
					d19 = NULL;
					x19 = 5;
					y19 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x19, y19);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x19, y19); cout << (char)207;
				}



				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x15, y15); cout << (char)207;
				Console::SetCursorPosition(x16, y16); cout << (char)207;
				Console::SetCursorPosition(x17, y17); cout << (char)207;
				Console::SetCursorPosition(x18, y18); cout << (char)207;
				Console::SetCursorPosition(x19, y19); cout << (char)207;

				//perdida de vidas nivel 4
				if (x == x15 && y == y15 || x == x16 && y == y16 ||
					x == x17 && y == y17 || x == x18 && y == y18 ||
					x == x19 && y == y19 || x == xb15 && y == yb15)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}

			}
			tiempo++;
		}


		//pasar a nivel 5
		if (y == 0 && nivel == 4 && puntaje_requerido<1)
		{
			nivel = 5;
		}

		if (nivel == 5 && contador == 3)
		{
			Console::Clear();
			mapa5();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 4;
		}

		//enemigos nivel 5
		if (nivel == 5)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x20, y20); cout << " ";
				if (x20 == 20) d20 = d20*-1;
				if (x20 == 15) d20 = d20*-1;
				Console::SetCursorPosition(x21, y21); cout << " ";
				if (x21 == 35) d21 = d21*-1;
				if (x21 == 30) d21 = d21*-1;
				Console::SetCursorPosition(x24, y24); cout << " ";
				if (x24 == 42) d24 = d24*-1;
				if (x24 == 8) d24 = d24*-1;
				Console::SetCursorPosition(x27, y27); cout << " ";
				if (x27 == 26) d27 = d27*-1;
				if (x27 == 10) d27 = d27*-1;
				Console::SetCursorPosition(x28, y28); cout << " ";
				if (x28 == 40) d28 = d28*-1;
				if (x28 == 26) d28 = d28*-1;
				Console::SetCursorPosition(x29, y29); cout << " ";
				if (x29 == 29) d29 = d29*-1;
				if (x29 == 21) d29 = d29*-1;



				x20 += d20;
				x21 += d21;
				x24 += d24;
				x27 += d27;
				x28 += d28;
				x29 += d29;

				//bala24
				if (xb24 == x24)
				{
					activa_bala24 = 1;
				}

				if (activa_bala24)
				{
					Console::SetCursorPosition(xb24, yb24);

					if (mapa_juego[yb24][xb24] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb24][xb24] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb24 < 29) yb24++;
					Console::SetCursorPosition(xb24, yb24); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb24 == 29 || mapa_juego[yb24 + 1][xb24] == 1) {
						Console::SetCursorPosition(xb24, yb24); cout << " ";
						activa_bala24 = 0;
						yb24 = y24;
						xb24 = r.Next(8, 42);
					}
				}
				//fin bala24

				//bala27
				if (xb27 == x27)
				{
					activa_bala27 = 1;
				}

				if (activa_bala27)
				{
					Console::SetCursorPosition(xb27, yb27);

					if (mapa_juego[yb27][xb27] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb27][xb27] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb27 < 29) yb27++;
					Console::SetCursorPosition(xb27, yb27); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb27 == 29 || mapa_juego[yb27 + 1][xb27] == 1) {
						Console::SetCursorPosition(xb27, yb27); cout << " ";
						activa_bala27 = 0;
						yb27 = y27;
						xb27 = r.Next(10, 16);
					}
				}
				//fin bala27

				//bala28
				if (xb28 == x28)
				{
					activa_bala28 = 1;
				}

				if (activa_bala28)
				{
					Console::SetCursorPosition(xb28, yb28);

					if (mapa_juego[yb28][xb28] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb28][xb28] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb28 < 29) yb28++;
					Console::SetCursorPosition(xb28, yb28); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb28 == 29 || mapa_juego[yb28 + 1][xb28] == 1) {
						Console::SetCursorPosition(xb28, yb28); cout << " ";
						activa_bala28 = 0;
						yb28 = y28;
						xb28 = r.Next(26, 40);
					}
				}
				//fin bala28

				if (x20 == xba && y20 == yba)
				{
					enemigos++;
					d20 = NULL;
					x20 = 1;
					y20 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x20, y20);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x20, y20); cout << (char)207;
				}

				if (x21 == xba && y21 == yba)
				{
					enemigos++;
					d21 = NULL;
					x21 = 2;
					y21 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x21, y21);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x21, y21); cout << (char)207;
				}

				if (x24 == xba && y24 == yba)
				{
					enemigos++;
					d24 = NULL;
					x24 = 3;
					y24 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x24, y24);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x24, y24); cout << (char)207;
				}

				if (x27 == xba && y27 == yba)
				{
					enemigos++;
					d27 = NULL;
					x27 = 4;
					y27 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x27, y27);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x27, y27); cout << (char)207;
				}

				if (x28 == xba && y28 == yba)
				{
					enemigos++;
					d28 = NULL;
					x28 = 5;
					y28 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x28, y28);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x28, y28); cout << (char)207;
				}

				if (x29 == xba && y29 == yba)
				{
					enemigos++;
					d29 = NULL;
					x29 = 6;
					y29 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x29, y29);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x29, y29); cout << (char)207;
				}

				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x20, y20); cout << (char)207;
				Console::SetCursorPosition(x21, y21); cout << (char)207;
				Console::SetCursorPosition(x24, y24); cout << (char)207;
				Console::SetCursorPosition(x27, y27); cout << (char)207;
				Console::SetCursorPosition(x28, y28); cout << (char)207;
				Console::SetCursorPosition(x29, y29); cout << (char)207;

				//perdida de vidas nivel 5
				if (x == x20 && y == y20 || x == x21 && y == y21 || x == x24 && y == y24
					|| x == x27 && y == y27 || x == x28 && y == y28 || x == x29 && y == y29
					|| x == xb24 && y == yb24 || x == xb27 && y == yb27 || x == xb28 && y == yb28)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}

			}
			tiempo++;
		}

		//pasar a nivel 6
		if (y == 0 && nivel == 5 && puntaje_requerido<1)
		{
			nivel = 6;
		}

		if (nivel == 6 && contador == 4)
		{
			Console::Clear();
			mapa6();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 5;
		}

		//enemigos nivel 6
		if (nivel == 6)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x58, y58); cout << " ";
				if (x58 == 28) d58 = d58*-1;
				if (x58 == 19) d58 = d58*-1;
				Console::SetCursorPosition(x60, y60); cout << " ";
				if (x60 == 29) d60 = d60*-1;
				if (x60 == 21) d60 = d60*-1;
				Console::SetCursorPosition(x61, y61); cout << " ";
				if (x61 == 33) d61 = d61*-1;
				if (x61 == 17) d61 = d61*-1;
				Console::SetCursorPosition(x62, y62); cout << " ";
				if (x62 == 28) d62 = d62*-1;
				if (x62 == 17) d62 = d62*-1;
				Console::SetCursorPosition(x63, y63); cout << " ";
				if (x63 == 21) d63 = d63*-1;
				if (x63 == 17) d63 = d63*-1;
				Console::SetCursorPosition(x64, y64); cout << " ";
				if (x64 == 22) d64 = d64*-1;
				if (x64 == 17) d64 = d64*-1;

				x58 += d58;
				x60 += d60;
				x61 += d61;
				x62 += d62;
				x63 += d63;
				x64 += d64;

				//bala61
				if (xb61 == x61)
				{
					activa_bala61 = 1;
				}

				if (activa_bala61)
				{
					Console::SetCursorPosition(xb61, yb61);

					if (mapa_juego[yb61][xb61] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb61][xb61] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb61 < 29) yb61++;
					Console::SetCursorPosition(xb61, yb61); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb61 == 29 || mapa_juego[yb61 + 1][xb61] == 1) {
						Console::SetCursorPosition(xb61, yb61); cout << " ";
						activa_bala61 = 0;
						yb61 = y61;
						xb61 = r.Next(23, 33);
					}
				}
				//fin bala61

				if (x58 == xba && y58 == yba)
				{
					enemigos++;
					d58 = NULL;
					x58 = 6;
					y58 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x58, y58);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x58, y58); cout << (char)207;
				}

				if (x60 == xba && y60 == yba)
				{
					enemigos++;
					d60 = NULL;
					x60 = 5;
					y60 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x60, y60);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x60, y60); cout << (char)207;
				}

				if (x61 == xba && y61 == yba)
				{
					enemigos++;
					d61 = NULL;
					x61 = 4;
					y61 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x61, y61);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x61, y61); cout << (char)207;
				}

				if (x62 == xba && y62 == yba)
				{
					enemigos++;
					d62 = NULL;
					x62 = 3;
					y62 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x62, y62);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x62, y62); cout << (char)207;
				}

				if (x63 == xba && y63 == yba)
				{
					enemigos++;
					d63 = NULL;
					x63 = 2;
					y63 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x63, y63);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x63, y63); cout << (char)207;
				}

				if (x64 == xba && y64 == yba)
				{
					enemigos++;
					d64 = NULL;
					x64 = 1;
					y64 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x64, y64);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x64, y64); cout << (char)207;
				}

				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x58, y58); cout << (char)207;
				Console::SetCursorPosition(x60, y60); cout << (char)207;
				Console::SetCursorPosition(x61, y61); cout << (char)207;
				Console::SetCursorPosition(x62, y62); cout << (char)207;
				Console::SetCursorPosition(x63, y63); cout << (char)207;
				Console::SetCursorPosition(x64, y64); cout << (char)207;

				//perdida de vidas nivel 6
				if (x == x58 && y == y58 || x == x60 && y == y60 ||
					x == x61 && y == y61 || x == x62 && y == y62 || x == x63 && y == y63 ||
					x == x64 && y == y64 || x == xb61 && y == yb61)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}


			}
			tiempo++;
		}

		//pasar a nivel 7
		if (y == 0 && nivel == 6 && puntaje_requerido<1)
		{
			nivel = 7;
		}

		if (nivel == 7 && contador == 5)
		{
			Console::Clear();
			mapa7();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 6;
		}

		//enemigos nivel 7
		if (nivel == 7)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x65, y65); cout << " ";
				if (x65 == 33) d65 = d65*-1;
				if (x65 == 17) d65 = d65*-1;
				Console::SetCursorPosition(x66, y66); cout << " ";
				if (x66 == 33) d66 = d66*-1;
				if (x66 == 17) d66 = d66*-1;
				Console::SetCursorPosition(x67, y67); cout << " ";
				if (x67 == 33) d67 = d67*-1;
				if (x67 == 17) d67 = d67*-1;
				Console::SetCursorPosition(x68, y68); cout << " ";
				if (x68 == 33) d68 = d68*-1;
				if (x68 == 17) d68 = d68*-1;
				Console::SetCursorPosition(x69, y69); cout << " ";
				if (x69 == 33) d69 = d69*-1;
				if (x69 == 17) d69 = d69*-1;
				Console::SetCursorPosition(x70, y70); cout << " ";
				if (x70 == 33) d70 = d70*-1;
				if (x70 == 17) d70 = d70*-1;
				Console::SetCursorPosition(x71, y71); cout << " ";
				if (x71 == 27) d71 = d71*-1;
				if (x71 == 20) d71 = d71*-1;
				Console::SetCursorPosition(x72, y72); cout << " ";
				if (x72 == 31) d72 = d72*-1;
				if (x72 == 24) d72 = d72*-1;
				Console::SetCursorPosition(x73, y73); cout << " ";
				if (x73 == 27) d73 = d73*-1;
				if (x73 == 20) d73 = d73*-1;
				Console::SetCursorPosition(x75, y75); cout << " ";
				if (x75 == 24) d75 = d75*-1;
				if (x75 == 20) d75 = d75*-1;
				Console::SetCursorPosition(x76, y76); cout << " ";
				if (x76 == 23) d76 = d76*-1;
				if (x76 == 20) d76 = d76*-1;
				Console::SetCursorPosition(x77, y77); cout << " ";
				if (x77 == 23) d77 = d77*-1;
				if (x77 == 20) d77 = d77*-1;
				Console::SetCursorPosition(x78, y78); cout << " ";
				if (x78 == 23) d78 = d78*-1;
				if (x78 == 17) d78 = d78*-1;



				x65 += d65;
				x66 += d66;
				x67 += d67;
				x68 += d68;
				x69 += d69;
				x70 += d70;
				x71 += d71;
				x72 += d72;
				x73 += d73;
				x75 += d75;
				x76 += d76;
				x77 += d77;
				x78 += d78;

				//bala65
				if (xb65 == x65)
				{
					activa_bala65 = 1;
				}

				if (activa_bala65)
				{
					Console::SetCursorPosition(xb65, yb65);

					if (mapa_juego[yb65][xb65] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb65][xb65] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb65 < 29) yb65++;
					Console::SetCursorPosition(xb65, yb65); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb65 == 29 || mapa_juego[yb65 + 1][xb65] == 1) {
						Console::SetCursorPosition(xb65, yb65); cout << " ";
						activa_bala65 = 0;
						yb65 = y65;
						xb65 = r.Next(19, 33);
					}
				}
				//fin bala65

				if (x65 == xba && y65 == yba)
				{
					enemigos++;
					d65 = NULL;
					x65 = 13;
					y65 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x65, y65);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x65, y65); cout << (char)207;
				}

				if (x66 == xba && y66 == yba)
				{
					enemigos++;
					d66 = NULL;
					x66 = 12;
					y66 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x66, y66);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x66, y66); cout << (char)207;
				}

				if (x67 == xba && y67 == yba)
				{
					enemigos++;
					d67 = NULL;
					x67 = 11;
					y67 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x67, y67);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x67, y67); cout << (char)207;
				}

				if (x68 == xba && y68 == yba)
				{
					enemigos++;
					d68 = NULL;
					x68 = 10;
					y68 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x68, y68);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x68, y68); cout << (char)207;
				}

				if (x69 == xba && y69 == yba)
				{
					enemigos++;
					d69 = NULL;
					x69 = 9;
					y69 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x69, y69);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x69, y69); cout << (char)207;
				}

				if (x70 == xba && y70 == yba)
				{
					enemigos++;
					d70 = NULL;
					x70 = 8;
					y70 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x70, y70);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x70, y70); cout << (char)207;
				}

				if (x71 == xba && y71 == yba)
				{
					enemigos++;
					d71 = NULL;
					x71 = 7;
					y71 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x71, y71);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x71, y71); cout << (char)207;
				}

				if (x72 == xba && y72 == yba)
				{
					enemigos++;
					d72 = NULL;
					x72 = 6;
					y72 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x72, y72);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x72, y72); cout << (char)207;
				}

				if (x73 == xba && y73 == yba)
				{
					enemigos++;
					d73 = NULL;
					x73 = 5;
					y73 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x73, y73);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x73, y73); cout << (char)207;
				}

				if (x75 == xba && y75 == yba)
				{
					enemigos++;
					d75 = NULL;
					x75 = 4;
					y75 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x75, y75);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x75, y75); cout << (char)207;
				}

				if (x76 == xba && y76 == yba)
				{
					enemigos++;
					d76 = NULL;
					x76 = 3;
					y76 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x76, y76);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x76, y76); cout << (char)207;
				}

				if (x77 == xba && y77 == yba)
				{
					enemigos++;
					d77 = NULL;
					x77 = 2;
					y77 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x77, y77);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x77, y77); cout << (char)207;
				}

				if (x78 == xba && y78 == yba)
				{
					enemigos++;
					d78 = NULL;
					x78 = 1;
					y78 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x78, y78);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x78, y78); cout << (char)207;
				}

				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x65, y65); cout << (char)207;
				Console::SetCursorPosition(x66, y66); cout << (char)207;
				Console::SetCursorPosition(x67, y67); cout << (char)207;
				Console::SetCursorPosition(x68, y68); cout << (char)207;
				Console::SetCursorPosition(x69, y69); cout << (char)207;
				Console::SetCursorPosition(x70, y70); cout << (char)207;
				Console::SetCursorPosition(x71, y71); cout << (char)207;
				Console::SetCursorPosition(x72, y72); cout << (char)207;
				Console::SetCursorPosition(x73, y73); cout << (char)207;
				Console::SetCursorPosition(x75, y75); cout << (char)207;
				Console::SetCursorPosition(x76, y76); cout << (char)207;
				Console::SetCursorPosition(x77, y77); cout << (char)207;
				Console::SetCursorPosition(x78, y78); cout << (char)207;

				//perdida de vidas nivel 7
				if (x == x65 && y == y65 || x == x66 && y == y66 || x == x67 && y == y67 || x == x68 && y == y68 ||
					x == x69 && y == y69 || x == x70 && y == y70 || x == x71 && y == y71 || x == x72 && y == y72 ||
					x == x73 && y == y73 || x == x75 && y == y75 || x == x76 && y == y76 ||
					x == x77 && y == y77 || x == x78 && y == y78 || x == xb65 && y == yb65)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}


			}
			tiempo++;
		}

		//pasar a nivel 8
		if (y == 0 && nivel == 7 && puntaje_requerido<1)
		{
			nivel = 8;
		}

		if (nivel == 8 && contador == 6)
		{
			Console::Clear();
			mapa8();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 7;
		}

		//enemigos nivel 8
		if (nivel == 8)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;



				Console::SetCursorPosition(x91, y91); cout << " ";
				if (x91 == 31) d91 = d91*-1;
				if (x91 == 18) d91 = d91*-1;
				Console::SetCursorPosition(x92, y92); cout << " ";
				if (x92 == 31) d92 = d92*-1;
				if (x92 == 18) d92 = d92*-1;
				Console::SetCursorPosition(x93, y93); cout << " ";
				if (x93 == 31) d93 = d93*-1;
				if (x93 == 18) d93 = d93*-1;
				Console::SetCursorPosition(x94, y94); cout << " ";
				if (x94 == 31) d94 = d94*-1;
				if (x94 == 18) d94 = d94*-1;

				Console::SetCursorPosition(x95, y95); cout << " ";
				if (x95 == 31) d95 = d95*-1;
				if (x95 == 18) d95 = d95*-1;
				Console::SetCursorPosition(x96, y96); cout << " ";
				if (x96 == 31) d96 = d96*-1;
				if (x96 == 18) d96 = d96*-1;
				Console::SetCursorPosition(x97, y97); cout << " ";
				if (x97 == 31) d97 = d97*-1;
				if (x97 == 18) d97 = d97*-1;
				Console::SetCursorPosition(x98, y98); cout << " ";
				if (x98 == 31) d98 = d98*-1;
				if (x98 == 18) d98 = d98*-1;
				Console::SetCursorPosition(x99, y99); cout << " ";
				if (x99 == 31) d99 = d99*-1;
				if (x99 == 18) d99 = d99*-1;
				Console::SetCursorPosition(x100, y100); cout << " ";
				if (x100 == 31) d100 = d100*-1;
				if (x100 == 18) d100 = d100*-1;




				x91 += d91;
				x92 += d92;
				x93 += d93;
				x94 += d94;
				x95 += d95;
				x96 += d96;
				x97 += d97;
				x98 += d98;
				x99 += d99;
				x100 += d100;


				//bala92
				if (xb92 == x92)
				{
					activa_bala92 = 1;
				}

				if (activa_bala92)
				{
					Console::SetCursorPosition(xb92, yb92);

					if (mapa_juego[yb92][xb92] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb92][xb92] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb92 < 29) yb92++;
					Console::SetCursorPosition(xb92, yb92); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb92 == 29 || mapa_juego[yb92 + 1][xb92] == 1) {
						Console::SetCursorPosition(xb92, yb92); cout << " ";
						activa_bala92 = 0;
						yb92 = y92;
						xb92 = r.Next(26, 31);
					}
				}
				//fin bala28

				if (x91 == xba && y91 == yba)
				{
					enemigos++;
					d91 = NULL;
					x91 = 10;
					y91 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x91, y91);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x91, y91); cout << (char)207;
				}

				if (x92 == xba && y92 == yba)
				{
					enemigos++;
					d92 = NULL;
					x92 = 9;
					y92 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x92, y92);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x92, y92); cout << (char)207;
				}

				if (x93 == xba && y93 == yba)
				{
					enemigos++;
					d93 = NULL;
					x93 = 8;
					y93 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x93, y93);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x93, y93); cout << (char)207;
				}

				if (x94 == xba && y94 == yba)
				{
					enemigos++;
					d94 = NULL;
					x94 = 7;
					y94 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x94, y94);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x94, y94); cout << (char)207;
				}

				if (x95 == xba && y95 == yba)
				{
					enemigos++;
					d95 = NULL;
					x95 = 6;
					y95 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x95, y95);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x95, y95); cout << (char)207;
				}

				if (x96 == xba && y96 == yba)
				{
					enemigos++;
					d96 = NULL;
					x96 = 5;
					y96 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x96, y96);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x96, y96); cout << (char)207;
				}

				if (x97 == xba && y97 == yba)
				{
					enemigos++;
					d97 = NULL;
					x97 = 4;
					y97 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x97, y97);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x97, y97); cout << (char)207;
				}

				if (x98 == xba && y98 == yba)
				{
					enemigos++;
					d98 = NULL;
					x98 = 3;
					y98 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x98, y98);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x98, y98); cout << (char)207;
				}

				if (x99 == xba && y99 == yba)
				{
					enemigos++;
					d99 = NULL;
					x99 = 2;
					y99 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x99, y99);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x99, y99); cout << (char)207;
				}

				if (x100 == xba && y100 == yba)
				{
					enemigos++;
					d100 = NULL;
					x100 = 1;
					y100 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x100, y100);
					Console::SetCursorPosition(1, 38);
					cout << " ";

				}
				else
				{
					Console::SetCursorPosition(x100, y100); cout << (char)207;
				}

				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x91, y91); cout << (char)207;
				Console::SetCursorPosition(x92, y92); cout << (char)207;
				Console::SetCursorPosition(x93, y93); cout << (char)207;
				Console::SetCursorPosition(x94, y94); cout << (char)207;
				Console::SetCursorPosition(x95, y95); cout << (char)207;
				Console::SetCursorPosition(x96, y96); cout << (char)207;
				Console::SetCursorPosition(x97, y97); cout << (char)207;
				Console::SetCursorPosition(x98, y98); cout << (char)207;
				Console::SetCursorPosition(x99, y99); cout << (char)207;
				Console::SetCursorPosition(x100, y100); cout << (char)207;

				//perdida de vidas nivel 8
				if (x == x91 && y == y91 || x == x92 && y == y92 ||
					x == x93 && y == y93 || x == x94 && y == y94 || x == x95 && y == y95 ||
					x == x96 && y == y96 || x == x97 && y == y97 || x == x98 && y == y98 ||
					x == x99 && y == y99 || x == x100 && y == y100 || x == xb92 && y == yb92)
				{
					Console::ForegroundColor = ConsoleColor::Black;
					cout << (char)219;
					x = 25;
					y = 29;
					Console::BackgroundColor = ConsoleColor::Black;
					Console::SetCursorPosition(x, y);
					Console::ForegroundColor = ConsoleColor::Blue;
					vidas--;
				}



			}
			tiempo++;
		}



		//pasar al jefe
		if (y == 0 && nivel == 8)
		{
			nivel = 9;
		}

		if (nivel == 9 && contador == 7)
		{
			Console::Clear();
			if (puntaje < 4000)
			{
				break;
			}
			boss();
			x = 25;
			y = 29;
			Console::SetCursorPosition(x, y);
			Console::ForegroundColor = ConsoleColor::Blue; cout << (char)207;
			contador = 8;
		}

		//Jefe
		if (nivel == 9)
		{
			if (tiempo % 100 == 0)
			{
				Console::BackgroundColor = ConsoleColor::Black;
				Console::ForegroundColor = ConsoleColor::Red;
				Console::SetCursorPosition(x30, y30); cout << " ";
				if (x30 == 27) d30 = d30*-1;
				if (x30 == 17) d30 = d30*-1;
				Console::SetCursorPosition(x31, y31); cout << " ";
				if (x31 == 28) d31 = d31*-1;
				if (x31 == 18) d31 = d31*-1;
				Console::SetCursorPosition(x32, y32); cout << " ";
				if (x32 == 29) d32 = d32*-1;
				if (x32 == 19) d32 = d32*-1;
				Console::SetCursorPosition(x33, y33); cout << " ";
				if (x33 == 30) d33 = d33*-1;
				if (x33 == 20) d33 = d33*-1;
				Console::SetCursorPosition(x34, y34); cout << " ";
				if (x34 == 31) d34 = d34*-1;
				if (x34 == 21) d34 = d34*-1;
				Console::SetCursorPosition(x35, y35); cout << " ";
				if (x35 == 32) d35 = d35*-1;
				if (x35 == 22) d35 = d35*-1;
				Console::SetCursorPosition(x36, y36); cout << " ";
				if (x36 == 33) d36 = d36*-1;
				if (x36 == 23) d36 = d36*-1;


				Console::SetCursorPosition(x37, y37); cout << " ";
				if (x37 == 27) d37 = d37*-1;
				if (x37 == 17) d37 = d37*-1;
				Console::SetCursorPosition(x38, y38); cout << " ";
				if (x38 == 28) d38 = d38*-1;
				if (x38 == 18) d38 = d38*-1;
				Console::SetCursorPosition(x39, y39); cout << " ";
				if (x39 == 29) d39 = d39*-1;
				if (x39 == 19) d39 = d39*-1;
				Console::SetCursorPosition(x40, y40); cout << " ";
				if (x40 == 30) d40 = d40*-1;
				if (x40 == 20) d40 = d40*-1;
				Console::SetCursorPosition(x41, y41); cout << " ";
				if (x41 == 31) d41 = d41*-1;
				if (x41 == 21) d41 = d41*-1;
				Console::SetCursorPosition(x42, y42); cout << " ";
				if (x42 == 32) d42 = d42*-1;
				if (x42 == 22) d42 = d42*-1;
				Console::SetCursorPosition(x43, y43); cout << " ";
				if (x43 == 33) d43 = d43*-1;
				if (x43 == 23) d43 = d43*-1;


				Console::SetCursorPosition(x44, y44); cout << " ";
				if (x44 == 27) d44 = d44*-1;
				if (x44 == 17) d44 = d44*-1;
				Console::SetCursorPosition(x45, y45); cout << " ";
				if (x45 == 28) d45 = d45*-1;
				if (x45 == 18) d45 = d45*-1;
				Console::SetCursorPosition(x46, y46); cout << " ";
				if (x46 == 29) d46 = d46*-1;
				if (x46 == 19) d46 = d46*-1;
				Console::SetCursorPosition(x47, y47); cout << " ";
				if (x47 == 30) d47 = d47*-1;
				if (x47 == 20) d47 = d47*-1;
				Console::SetCursorPosition(x48, y48); cout << " ";
				if (x48 == 31) d48 = d48*-1;
				if (x48 == 21) d48 = d48*-1;
				Console::SetCursorPosition(x49, y49); cout << " ";
				if (x49 == 32) d49 = d49*-1;
				if (x49 == 22) d49 = d49*-1;
				Console::SetCursorPosition(x50, y50); cout << " ";
				if (x50 == 33) d50 = d50*-1;
				if (x50 == 23) d50 = d50*-1;


				Console::SetCursorPosition(x51, y51); cout << " ";
				if (x51 == 27) d51 = d51*-1;
				if (x51 == 17) d51 = d51*-1;
				Console::SetCursorPosition(x52, y52); cout << " ";
				if (x52 == 28) d52 = d52*-1;
				if (x52 == 18) d52 = d52*-1;
				Console::SetCursorPosition(x53, y53); cout << " ";
				if (x53 == 29) d53 = d53*-1;
				if (x53 == 19) d53 = d53*-1;
				Console::SetCursorPosition(x54, y54); cout << " ";
				if (x54 == 30) d54 = d54*-1;
				if (x54 == 20) d54 = d54*-1;
				Console::SetCursorPosition(x55, y55); cout << " ";
				if (x55 == 31) d55 = d55*-1;
				if (x55 == 21) d55 = d55*-1;
				Console::SetCursorPosition(x56, y56); cout << " ";
				if (x56 == 32) d56 = d56*-1;
				if (x56 == 22) d56 = d56*-1;
				Console::SetCursorPosition(x57, y57); cout << " ";
				if (x57 == 33) d57 = d57*-1;
				if (x57 == 23) d57 = d57*-1;



				x30 += d30;
				x31 += d31;
				x32 += d32;
				x33 += d33;
				x34 += d34;
				x35 += d35;
				x36 += d36;

				x37 += d37;
				x38 += d38;
				x39 += d39;
				x40 += d40;
				x41 += d41;
				x42 += d42;
				x43 += d43;

				x44 += d44;
				x45 += d45;
				x46 += d46;
				x47 += d47;
				x48 += d48;
				x49 += d49;
				x50 += d50;

				x51 += d51;
				x52 += d52;
				x53 += d53;
				x54 += d54;
				x55 += d55;
				x56 += d56;
				x57 += d57;

				//bala51
				if (xb51 == x51)
				{
					activa_bala51 = 1;
				}

				if (activa_bala51)
				{
					Console::SetCursorPosition(xb51, yb51);

					if (mapa_juego[yb51][xb51] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb51][xb51] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb51 < 29) yb51++;
					Console::SetCursorPosition(xb51, yb51); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb51 == 29 || mapa_juego[yb51 + 1][xb51] == 1) {
						Console::SetCursorPosition(xb51, yb51); cout << " ";
						activa_bala51 = 0;
						yb51 = y51;
						xb51 = r.Next(9, 22);
					}
				}
				//fin bala51

				if (xb52 == x52)
				{
					activa_bala52 = 1;
				}

				if (activa_bala52)
				{
					Console::SetCursorPosition(xb52, yb52);

					if (mapa_juego[yb52][xb52] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb52][xb52] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb52 < 29) yb52++;
					Console::SetCursorPosition(xb52, yb52); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb52 == 29 || mapa_juego[yb52 + 1][xb52] == 1) {
						Console::SetCursorPosition(xb52, yb52); cout << " ";
						activa_bala52 = 0;
						yb52 = y52;
						xb52 = r.Next(9, 22);
					}
				}

				if (activa_bala53)
				{
					Console::SetCursorPosition(xb53, yb53);

					if (mapa_juego[yb53][xb53] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb53][xb53] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb53 < 29) yb53++;
					Console::SetCursorPosition(xb53, yb53); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb53 == 29 || mapa_juego[yb53 + 1][xb53] == 1) {
						Console::SetCursorPosition(xb53, yb53); cout << " ";
						activa_bala53 = 0;
						yb53 = y53;
						xb53 = r.Next(9, 22);
					}
				}

				if (activa_bala54)
				{
					Console::SetCursorPosition(xb54, yb54);

					if (mapa_juego[yb54][xb54] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb54][xb54] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb54 < 29) yb54++;
					Console::SetCursorPosition(xb54, yb54); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb54 == 29 || mapa_juego[yb54 + 1][xb54] == 1) {
						Console::SetCursorPosition(xb54, yb54); cout << " ";
						activa_bala54 = 0;
						yb54 = y54;
						xb54 = r.Next(9, 22);
					}
				}

				if (activa_bala55)
				{
					Console::SetCursorPosition(xb55, yb55);

					if (mapa_juego[yb55][xb55] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb55][xb55] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb55 < 29) yb55++;
					Console::SetCursorPosition(xb55, yb55); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb55 == 29 || mapa_juego[yb55 + 1][xb55] == 1) {
						Console::SetCursorPosition(xb55, yb55); cout << " ";
						activa_bala55 = 0;
						yb55 = y55;
						xb55 = r.Next(9, 22);
					}
				}

				if (activa_bala56)
				{
					Console::SetCursorPosition(xb56, yb56);

					if (mapa_juego[yb56][xb56] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb56][xb56] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb56 < 29) yb56++;
					Console::SetCursorPosition(xb56, yb56); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb56 == 29 || mapa_juego[yb56 + 1][xb56] == 1) {
						Console::SetCursorPosition(xb56, yb56); cout << " ";
						activa_bala56 = 0;
						yb56 = y56;
						xb56 = r.Next(9, 22);
					}
				}

				if (activa_bala57)
				{
					Console::SetCursorPosition(xb57, yb57);

					if (mapa_juego[yb57][xb57] == 2) { Console::ForegroundColor = ConsoleColor::Yellow; cout << (char)30; }
					if (mapa_juego[yb57][xb57] == 9) { Console::BackgroundColor = ConsoleColor::DarkGray; Console::ForegroundColor = ConsoleColor::DarkGray; cout << " "; }
					else cout << " ";
					if (yb57 < 29) yb57++;
					Console::SetCursorPosition(xb57, yb57); Console::ForegroundColor = ConsoleColor::White;
					cout << ".";
					if (yb57 == 29 || mapa_juego[yb57 + 1][xb57] == 1) {
						Console::SetCursorPosition(xb57, yb57); cout << " ";
						activa_bala57 = 0;
						yb57 = y57;
						xb57 = r.Next(9, 22);
					}
				}

				if (x30 == xba && y30 == yba || x31 == xba && y31 == yba || x33 == xba && y33 == yba || x34 == xba && y34 == yba || x35 == xba && y35 == yba || x36 == xba && y36 == yba || x37 == xba && y37 == yba || x43 == xba && y43 == yba || x44 == xba && y44 == yba || x50 == xba && y50 == yba || x51 == xba && y51 == yba || x52 == xba && y52 == yba || x53 == xba && y53 == yba || x54 == xba && y54 == yba || x55 == xba && y55 == yba || x56 == xba && y56 == yba || x57 == xba && y57 == yba)
				{
					vidas_jefe--;
					yba = NULL;
				}

				if (vidas_jefe == 0)
				{
					enemigos++;
					d30 = NULL;
					x30 = 1;
					y30 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x30, y30);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d31 = NULL;
					x31 = 2;
					y31 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x31, y31);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d32 = NULL;
					x32 = 3;
					y32 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x32, y32);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d33 = NULL;
					x33 = 4;
					y33 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x33, y33);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d34 = NULL;
					x34 = 5;
					y34 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x34, y34);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d35 = NULL;
					x35 = 6;
					y35 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x35, y35);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d36 = NULL;
					x36 = 7;
					y36 = 38;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x36, y36);
					Console::SetCursorPosition(1, 38);
					cout << " ";


					d37 = NULL;
					x37 = 1;
					y37 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x37, y37);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d38 = NULL;
					x38 = 2;
					y38 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x38, y38);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d39 = NULL;
					x39 = 3;
					y39 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x39, y39);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d40 = NULL;
					x40 = 4;
					y40 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x40, y40);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d41 = NULL;
					x41 = 5;
					y41 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x41, y41);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d42 = NULL;
					x42 = 6;
					y42 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x42, y42);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d43 = NULL;
					x43 = 7;
					y43 = 39;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x43, y43);
					Console::SetCursorPosition(1, 38);
					cout << " ";


					d44 = NULL;
					x44 = 1;
					y44 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x40, y40);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d45 = NULL;
					x45 = 2;
					y45 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x45, y45);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d46 = NULL;
					x46 = 3;
					y46 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x46, y46);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d47 = NULL;
					x47 = 4;
					y47 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x47, y47);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d48 = NULL;
					x48 = 5;
					y48 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x48, y48);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d49 = NULL;
					x49 = 6;
					y49 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x49, y49);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d50 = NULL;
					x50 = 7;
					y50 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x50, y50);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d51 = NULL;
					x51 = 1;
					y51 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x51, y51);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d52 = NULL;
					x52 = 2;
					y52 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x52, y52);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d53 = NULL;
					x53 = 3;
					y53 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x53, y53);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d54 = NULL;
					x54 = 4;
					y54 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x54, y54);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d55 = NULL;
					x55 = 5;
					y55 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x55, y55);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d56 = NULL;
					x56 = 6;
					y56 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x56, y56);
					Console::SetCursorPosition(1, 38);
					cout << " ";

					d57 = NULL;
					x57 = 7;
					y57 = 40;
					Console::SetCursorPosition(xba, yba);
					cout << " ";
					Console::SetCursorPosition(x57, y57);
					Console::SetCursorPosition(1, 38);
					cout << " ";
				}

				else
				{
					Console::SetCursorPosition(x30, y30); cout << (char)207;
					Console::SetCursorPosition(x31, y31); cout << (char)207;
					Console::SetCursorPosition(x32, y32); cout << (char)207;
					Console::SetCursorPosition(x33, y33); cout << (char)207;
					Console::SetCursorPosition(x34, y34); cout << (char)207;
					Console::SetCursorPosition(x35, y35); cout << (char)207;
					Console::SetCursorPosition(x36, y36); cout << (char)207;

					Console::SetCursorPosition(x37, y37); cout << (char)207;
					Console::SetCursorPosition(x38, y38); cout << (char)207;
					Console::SetCursorPosition(x39, y39); cout << (char)207;
					Console::SetCursorPosition(x40, y40); cout << (char)207;
					Console::SetCursorPosition(x41, y41); cout << (char)207;
					Console::SetCursorPosition(x42, y42); cout << (char)207;
					Console::SetCursorPosition(x43, y43); cout << (char)207;

					Console::SetCursorPosition(x44, y44); cout << (char)207;
					Console::SetCursorPosition(x45, y45); cout << (char)207;
					Console::SetCursorPosition(x46, y46); cout << (char)207;
					Console::SetCursorPosition(x47, y47); cout << (char)207;
					Console::SetCursorPosition(x48, y48); cout << (char)207;
					Console::SetCursorPosition(x49, y49); cout << (char)207;
					Console::SetCursorPosition(x50, y50); cout << (char)207;

					Console::SetCursorPosition(x51, y51); cout << (char)207;
					Console::SetCursorPosition(x52, y52); cout << (char)207;
					Console::SetCursorPosition(x53, y53); cout << (char)207;
					Console::SetCursorPosition(x54, y54); cout << (char)207;
					Console::SetCursorPosition(x55, y55); cout << (char)207;
					Console::SetCursorPosition(x56, y56); cout << (char)207;
					Console::SetCursorPosition(x57, y57); cout << (char)207;
				}

			}
			tiempo++;
		}

		//pasar a fin de hito 2
		if (y == 0 && nivel == 9 && vidas_jefe == 0){ nivel = 10; }

		if (nivel == 10 && contador == 8)	{ break;	contador = 8; }



	}//fin while



	if (puntaje > 3400)
	{
		Console::Clear();
		Console::ForegroundColor = ConsoleColor::White;
		Console::SetCursorPosition(18, 11); cout << "FINAL DEL JUEGO";
		Console::ForegroundColor = ConsoleColor::Red;
		Console::SetCursorPosition(19, 14); cout << "FELICIDADES ";
		Console::ForegroundColor = ConsoleColor::Blue;
		Console::SetCursorPosition(20, 18); cout << "USTED GANO ";
		Console::ForegroundColor = ConsoleColor::White;
		Console::SetCursorPosition(15, 25); cout << "Gracias por jugar ";

		Console::SetCursorPosition(15, 30); cout << "David Jimenez Fernanez";
		Console::SetCursorPosition(14, 31); cout << "Maximo Mallqui Tertuliano";
	}
	else {
		Console::Clear();
		char tecla2;

		Console::Clear();
		Console::SetCursorPosition(0, 10);
		Console::ForegroundColor = ConsoleColor::Blue;
		game_over();
		Console::SetCursorPosition(1, 33);
		Console::ForegroundColor = ConsoleColor::White;
		cout << "Presione cualquier tecla para finalizar ...";
	}


	_getch();
}